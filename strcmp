// strcmp
// vergleicht 2 strings
// r0 = 2 -> string1 erstes ungleiches zeichen größer als bei string 2
// r0 = 1 -> string1 erstes ungleiches zeichen kleiner als bei string 2
// r0 = 0 -> strings sind gleich
//-----------------------------------------------------------

.data
str1:
	.asciz "test_a"
str2: 
	.asciz "test_b"
.text
.global _start
_start:
	push {r1-r3}
	ldr r0, =str1
	ldr r1, =str2
	bl strcmp
	mov r10, r0
	pop {r1-r3}

end:	
	b end
	
strcmp:
	push {r4}
	mov r4, #0
strcmp_loop:
	ldrb r2, [r0, r4]
	ldrb r3, [r1, r4]
	cmp r2, r3
	bne str_noteq
	cmp r2, #0
	beq strcmp_true
	add r4, r4, #1
	b strcmp_loop
	
str_noteq:	
	bcc strcmp_s1_kleiner
	mov r0, #2
	b strcmp_end
strcmp_s1_kleiner:
	mov r0, #1
	b strcmp_end
strcmp_true:
	mov r0, #0
strcmp_end:
	pop {r4}
	bx lr
	
//************************************* E O F ******************************************/
