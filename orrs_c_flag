// ORRS kann C-Flag setzen, warum?

// Wenn man sich mit der ARMv7-Architektur befasst, kann es einem passieren, dass man über folgendes stolpert:
//    "Condition flags:
//                      If S is specified, the ORR instruction:
//                      - Updates the N and Z flags according to the result.
//                      - Can update the C flag during the calculation of .Operand2
//                      - Does not affect the V flag.
//                       ..." 
// 
// Dass die N & Z flags abhängig vom Ergebnis einer Veroderung gesetzt werden können, leuchtet unmittelbar ein.
// Aber wieso die C-Flag?
// -> In ARMv7 ist es möglich, dass der zweite Operand kombiniert mit einer Shiftoperation berechnet wird.
//    Das erklärt, wieso das Carry-Flag gesetzt werden kann

// Beispielcode:

.global _start
_start:
	
    mov r0, #0
	  ldr r1, =0xffffffff
	  mov r2, #0x02
	
	  ORRS r0, r1, r2, LSL #31
end:	
	  b end


//				 C| Registercontent
//    		  Operand 1 : 0x00 ffffffff	
//    	          Operand 2 : 0x01 00000000
// Veorderung: _____________________________
//    		         r0 : 0x01 ffffffff	
